apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-crash'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'org.standardout.versioneye'

jacoco {
    toolVersion '0.7.4.201502262128'
}

String VERSION_REVISION = 'git rev-list --count HEAD'.execute().text.trim()
String VERSION_HASH     = 'git rev-parse --short HEAD'.execute().text.trim()

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId    'com.github.ayltai.newspaper'
        minSdkVersion    16
        targetSdkVersion 25
        versionCode      6
        versionName      '1.2.0r' + VERSION_REVISION + '-' + VERSION_HASH

        testInstrumentationRunner          'android.support.test.runner.AndroidJUnitRunner'
        testInstrumentationRunnerArguments disableAnalytics: 'true'

        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            storeFile     file('../key-store.jks')
            keyAlias      System.getenv('ANDROID_KEY_ALIAS')
            storePassword System.getenv('ANDROID_STORE_PASSWORD')
            keyPassword   System.getenv('ANDROID_KEY_PASSWORD')
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        preDexLibraries false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

checkstyle {
    configFile     rootProject.file('checkstyle.xml')
    showViolations true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Android
    compile 'com.android.support:support-annotations:25.1.0'
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:support-compat:25.1.0'
    compile 'com.android.support:support-v13:25.1.0'
    compile 'com.android.support:design:25.1.0'
    compile 'com.android.support:recyclerview-v7:25.1.0'
    compile 'com.android.support:cardview-v7:25.1.0'
    compile 'com.android.support:support-core-utils:25.1.0'
    compile 'com.takisoft.fix:preference-v7:25.1.0.2'

    // Firebase
    compile 'com.google.firebase:firebase-core:10.0.1'
    compile 'com.google.firebase:firebase-crash:10.0.1'
    compile 'com.google.firebase:firebase-config:10.0.1'
    compile 'com.google.firebase:firebase-invites:10.0.1'

    // Fabric
    releaseCompile('io.fabric.sdk.android:fabric:1.3.15@aar')           { transitive = true; }
    releaseCompile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') { transitive = true; }
    releaseCompile('com.crashlytics.sdk.android:answers:1.3.11@aar')    { transitive = true; }
    testCompile('com.crashlytics.sdk.android:answers:1.3.11@aar') { transitive = true; }
    compile('com.optimizely:optimizely:1.7.0@aar') { transitive = true; }
    compile('com.appsee:appsee-android:2.3@aar')   { transitive = true; }

    // ReactiveX
    compile 'io.reactivex:rxjava:1.2.5'
    compile ('io.reactivex:rxandroid:1.2.1') {
        exclude group: 'io.reactivex', module: 'rxjava'
    }
    compile ('com.jakewharton.rxbinding:rxbinding:1.0.0') {
        exclude group: 'io.reactivex', module: 'rxjava'
        exclude group: 'io.reactivex', module: 'rxandroid'
    }

    // Flow by Square
    compile 'com.squareup.flow:flow:1.0.0-alpha2'

    // Networking
    compile 'com.squareup.okhttp3:okhttp:3.5.0'

    // Database
    compile 'io.realm:android-adapters:1.4.0'

    // Image processing
    compile 'com.facebook.fresco:fresco:1.0.1'
    compile ('com.github.stfalcon:frescoimageviewer:0.4.1') {
        exclude group: 'com.facebook.fresco', module: 'fresco'
    }
    compile 'com.google.android.gms:play-services-vision:10.0.1'
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.6.0'
    compile ('com.github.piasy:BigImageViewer:1.2.5') {
        exclude group: 'com.android.support',    module: 'support-annotations'
        exclude group: 'com.davemorrissey.labs', module: 'subsampling-scale-image-view'
    }
    compile ('com.github.piasy:FrescoImageLoader:1.2.5') {
        exclude group: 'com.facebook.fresco', module: 'fresco'
    }
    compile 'com.github.piasy:ProgressPieIndicator:1.2.5'

    // Eye candies
    compile ('hanks.xyz:smallbang-library:0.1.2') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    compile 'com.github.javiersantos:MaterialStyledDialogs:2.0'
    compile 'com.tubb.smrv:swipemenu-recyclerview:5.4.0'
    compile 'com.github.Yalantis:GuillotineMenu-Android:1.2'

    // Facebook Stetho
    debugCompile 'com.facebook.stetho:stetho:1.4.2'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.4.2'

    // LeakCanary
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    testCompile  'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

    // Takt
    debugCompile 'jp.wasabeef:takt:1.0.3'

    // Tests
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile ('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile ('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile ('com.android.support.test.espresso:espresso-contrib:2.2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile ('com.android.support.test.espresso:espresso-intents:2.2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

task customFindBugs(type: FindBugs) {
    ignoreFailures = false
    effort         = "max"
    reportLevel    = "medium"
    classes        = files("$project.buildDir/intermediates/classes")

    // Use this only if you want exclude some errors
    excludeFilter = file("$rootProject.rootDir/findbugs-android-exclude.xml")

    source    = fileTree('src/main/java/')
    classpath = files()

    reports {
        xml.enabled      = false
        xml.withMessages = true
        html.enabled     = true
        xml.destination  "$project.buildDir/outputs/findbugs/findbugs-output.xml"
        html.destination "$project.buildDir/outputs/findbugs/findbugs-output.html"
    }
}

assemble.dependsOn customFindBugs

task jacocoReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    group       = 'Reporting'
    description = 'Generate Jacoco coverage reports after running tests.'

    reports {
        xml.enabled  = true
        html.enabled = true
    }

    classDirectories = fileTree(
        dir: 'build/intermediates/classes/test/debug',
        excludes: [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*$Lambda$*.*',
            '**/*$RealmProxy.*'
        ]
    )

    sourceDirectories = files('src/main/java')
    executionData     = files('build/jacoco/testDebugUnitTest.exec')

    doFirst {
        files('build/intermediates/classes/test/debug').getFiles().each { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'
